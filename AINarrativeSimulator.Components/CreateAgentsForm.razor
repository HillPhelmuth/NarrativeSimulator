@using NarrativeSimulator.Core.Models

<EditForm Model="_form" OnValidSubmit="SubmitAsync" class="panel create-agents">
    <DataAnnotationsValidator />
    <div class="panel-header">
        <div class="panel-title">
            <div class="title-icon"></div>
            <h3>Create Agents</h3>
        </div>
    </div>
    <div class="form-body">
        <ValidationSummary class="validation-summary" />
        <div class="form-grid">
            <div style="display:flex;flex-direction:row; justify-content:space-between">
                <div class="field">
                    <label>World Type</label>
                    <InputRadioGroup @bind-Value="_form.WorldType" class="radio-group">
                        <div class="radio-option">
                            <label>
                                <InputRadio Value="WorldType.RealWorld" />
                                <span>Real World / Contemporary</span>
                            </label>
                        </div>
                        <div class="radio-option">
                            <label>
                                <InputRadio Value="WorldType.Fictional" />
                                <span>Fictional / Custom Setting</span>
                            </label>
                        </div>
                    </InputRadioGroup>
                </div>
                <div class="field" style="width:50%">
                    <label for="numAgents">Number of Agents</label>
                    <InputNumber id="numAgents" @bind-Value="_form.NumberOfAgents" class="number-input" min="1" max="12" />
                    <small class="hint">1 - 12</small>
                    <ValidationMessage For="() => _form.NumberOfAgents" />
                </div>
            </div>
            <div class="field span-2">
                <label for="prompt">Base World / Team Prompt<span class="req">*</span></label>
                <InputTextArea id="prompt" @bind-Value="_form.Prompt" class="text-input textarea" rows="4" placeholder="Describe the context, project, or scenario the agents exist within..."/>
                <ValidationMessage For="() => _form.Prompt"/>
            </div>



            @if (_form.WorldType == WorldType.Fictional)
            {
                <div class="field span-2 fade-in">
                    <label for="fictionalDesc">Fictional World Description</label>
                    <InputTextArea id="fictionalDesc" @bind-Value="_form.FictionalWorldDescription" class="text-input textarea" rows="3" placeholder="Describe geography, technology level, factions, tone, stakes..."/>
                    <small class="hint">Used to ground agent personalities and goals in this setting.</small>
                </div>
            }

           
            <div class="actions">
                <button type="submit" class="btn btn-primary">Generate Agents</button>
            </div>
        </div>

        
    </div>
</EditForm>
